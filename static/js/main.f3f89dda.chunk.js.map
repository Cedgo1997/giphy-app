{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.helper.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","state","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAQA,OACI,sBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBAC2B,IAA7BJ,EAAWK,OAAOC,QAAgBR,GAAc,SAACS,GAAD,OAAYP,GAAZ,mBAA2BO,OAC3EN,EAAc,KAId,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAZc,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,a,+BCN/CG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACTC,EAFa,iDAEmCC,UAAUH,GAF7C,6BACJ,oCADI,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAO1B,EAAP,KAAc2B,EAAd,KAYA,OAPAC,qBAAU,WACNvB,EAAQC,GAAUuB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACpCd,KAAMiB,EACNJ,SAAS,SAEd,CAACpB,IAEGN,EDV2B+B,CAAazB,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,gEAAd,SAA+EhB,IAC9EoB,GAAW,wCACZ,qBAAKJ,UAAU,gEAAf,SACI,6BAEKH,EAAOJ,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,eEZxBe,EAAe,WAGxB,IACA,EAAoCxC,mBADf,CAAC,gBACtB,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAEA,OACI,eAAC,WAAD,WACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEQ0C,EAAWlB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CACIA,SAAYA,GACPA,YCjBjC4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f3f89dda.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (e) => setInputValue(e.target.value);\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        inputValue.trim().length !== 0 && setCategories((state) => [inputValue, ...state]);\n        setInputValue('');\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async (category) => {\n    const apiKey = 'EfiDDliYy1sKOtC0ePfLVayOWsFVNM9x';\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n    return (\n        <div className=\"card\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from './../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"card-grid animate__animated animate__fadeIn animate__delay-1s\">{category}</h3>\n            {loading && <p>Loading</p>}\n            <div className=\"card-grid animate__animated animate__fadeIn animate__delay-1s\">\n                <ul>\n\n                    {images.map((img) =>\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />)}\n                </ul>\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs.helper\";\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category).then(imgs => setState({\n            data: imgs,\n            loading: false\n        }));\n    }, [category]);\n\n    return state;\n}","import React, { useState } from 'react';\nimport { Fragment } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n\n    const initialState = ['Dragon Ball'];\n    const [categories, setCategories] = useState(initialState);\n\n    return (\n        <Fragment>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories = {setCategories} />\n            <hr />\n\n            <ol>\n                {\n                    categories.map((category) => \n                        <GifGrid \n                            category = {category} \n                            key={category}\n                        />)\n                }\n            </ol>\n        </Fragment>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}